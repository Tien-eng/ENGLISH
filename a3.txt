<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Compare Speech to Text by Meaning</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            padding: 20px;
        }
        .transcript-container, .input-container, .result-container {
            margin-top: 20px;
            border: 1px solid #ccc;
            padding: 10px;
            background-color: #f9f9f9;
            min-height: 50px;
        }
    </style>
</head>
<body>
    <h1>Compare Your Sentence with Recorded Speech (By Meaning)</h1>

    <button id="start-btn">Start Recording</button>
    <button id="stop-btn">Stop Recording</button>

    <div class="transcript-container">
        <p id="transcript">Recorded sentence will appear here...</p>
    </div>

    <div class="input-container">
        <label for="user-input">Enter your English sentence to compare:</label><br>
        <input type="text" id="user-input" placeholder="Type your sentence here..." style="width: 100%; padding: 10px;">
    </div>

    <div class="result-container">
        <p id="comparison-result">Comparison result will appear here...</p>
    </div>

    <script>
        const startBtn = document.getElementById('start-btn');
        const stopBtn = document.getElementById('stop-btn');
        const transcript = document.getElementById('transcript');
        const userInput = document.getElementById('user-input');
        const comparisonResult = document.getElementById('comparison-result');

        let recordedText = ''; // Biến để lưu câu ghi âm

        let recognition;

        if ('webkitSpeechRecognition' in window) {
            recognition = new webkitSpeechRecognition();
        } else if ('SpeechRecognition' in window) {
            recognition = new SpeechRecognition();
        } else {
            transcript.textContent = "Your browser does not support speech recognition.";
        }

        if (recognition) {
            recognition.continuous = true;
            recognition.interimResults = false;
            recognition.lang = 'en-US';

            recognition.onstart = () => {
                transcript.textContent = "Listening...";
            };

            recognition.onresult = (event) => {
                recordedText = event.results[0][0].transcript;
                transcript.textContent = `Recorded sentence: ${recordedText}`;
            };

            recognition.onerror = (event) => {
                transcript.textContent = `Error occurred in recognition: ${event.error}`;
            };

            recognition.onend = () => {
                transcript.textContent += "\nRecording stopped.";
                compareSentences(); // Gọi hàm so sánh sau khi ghi âm kết thúc
            };

            startBtn.addEventListener('click', () => {
                recognition.start();
            });

            stopBtn.addEventListener('click', () => {
                recognition.stop();
            });
        }

        // Hàm so sánh câu nhập liệu và câu ghi âm theo nghĩa
        function compareSentences() {
            const userSentence = userInput.value.trim();
            if (!userSentence) {
                comparisonResult.textContent = "Please enter a sentence to compare.";
                return;
            }

            const processedRecorded = processSentence(recordedText);
            const processedUserSentence = processSentence(userSentence);

            if (processedRecorded === processedUserSentence) {
                comparisonResult.textContent = "The sentences are the same in meaning!";
            } else {
                comparisonResult.textContent = `The sentences are different in meaning.`;
            }
        }

        // Hàm xử lý câu, loại bỏ các từ dư thừa, chuyển đổi viết tắt, v.v.
        function processSentence(sentence) {
            // Chuyển câu về chữ thường và loại bỏ các ký tự đặc biệt
            sentence = sentence.toLowerCase().replace(/[^\w\s]/gi, '');

            // Thay thế một số từ viết tắt
            sentence = sentence.replace(/\b(i'm)\b/g, 'i am');
            sentence = sentence.replace(/\b(you're)\b/g, 'you are');
            sentence = sentence.replace(/\b(we're)\b/g, 'we are');
            sentence = sentence.replace(/\b(he's)\b/g, 'he is');
            sentence = sentence.replace(/\b(she's)\b/g, 'she is');
            sentence = sentence.replace(/\b(they're)\b/g, 'they are');
            sentence = sentence.replace(/\b(doesn't)\b/g, 'does not');
            sentence = sentence.replace(/\b(don't)\b/g, 'do not');
            sentence = sentence.replace(/\b(cannot)\b/g, 'can not');
            sentence = sentence.replace(/\b(ain't)\b/g, 'is not');
            // ...bạn có thể thêm nhiều từ khác theo nhu cầu

            // Loại bỏ các từ dư thừa (stop words) nếu muốn
            const stopWords = ['the', 'a', 'an', 'is', 'of', 'in', 'on', 'at', 'to', 'for'];
            const words = sentence.split(' ').filter(word => !stopWords.includes(word));

            return words.join(' ');
        }
    </script>
</body>
</html>
